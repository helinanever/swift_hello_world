workflows:
    ios-hello-world:
      name: Code signing
      environment:
        vars:
          CM_CERTIFICATE: Encrypted(Z0FBQUFBQmUxT3hwbG5TN2Ewbkk0TVNmMzdtdER4YXlDdmNVRTltNUplM0g1QlZFZmlhbkhuRml1VVZYRVFHd1NROW5wUDNzaWMtYWJZZ2lUeEM2SmhBenB4OEE2YVUtZjN1cDhrV0Y1QWg0c04wakItWHhpaG1Vb083SnlIcG1aZDB2MUVFanpJY3BWUmVKeDJOVEJCeUNRV1dvYy15TTdZZXQ4T2c0Sm5pNnpCMXVabk14V2UxU05NRjJYdFFvQm5VVnpJUFNWUlRDRWdoODBySFFpWDV3LWd5emhubFpfdGQ5YS1SdGhrWjNHTDdhRVlaYUhoaGl6UVlYODJxVEcwUHRia0JxdzlyZTNBeWJWaWhXZmE1WUVMZ0gxenpremxUbnczakNLZkNUOGIteFNhcGJPX2l1TUdmeXZnTkFFVEdwZzM3MHkweWlLZ2l1ZFdTOWo4bVFUY2wzT2xnVmk1RW5paDRwd05BTkpVQVRkeHRmVlZXRlM1ekRrMUhlMW9HSU9PbUgxOFIwdXI1em9fM18wOHdFMS1EOTRIb1p2dFJST0d2SEpydGJDLUQxVTJHRG5RdTBHNE9zSWp3WGIyajlSMmhVVkxTUUF4NzYxREMzcW1LcUFsOVpscVRtZkJpRFFBSklpSTJTUWttNlVYSGp1QW5FUlFEUm1wNmY2VVV0TFlqVlBhX2Jua3dlYjFpZFlrRWFYVUJwSWJCZklQbTBFVjJIUG9HUFhQdlJET0R2d24weEM1UlVrOU1HNkdNMVlJVVJhb2JEUGo1cjBQS3VfYWo4ZW9BYUNfcUpEei1aMXplMWN5RnpSTlNGNUtZTnkyZy1rZHpaWGM0S3ZEWlcyZFh3LWhSLTVES0N3bmRMVE9nS0Q0RWR3eE1jbjVhbWJ2NXZERTJkeVdBU19UdW82N2ZkZklQaDhaRE5RX0VpTVBiTklUdU9IejdlM1dHUVdta2pZRzFKUDdrRUJJRU52eDU0b240SXBNWnNOWTZWRldFYUhLOWM2cXlHUTlzeG50bmJSa2FoRnFlRS16V0I2R2N1R29ZenhPdHB6THV0VzZNZzg2TG1Ncy14RGF5Ui1xYS1xRFFPa3dQYXVjZktMNENpM0Y1RV9YcExnTGpsbnU0alpEQWpHUXZpRnYwUXFYcG9nNkcyclpJTEo5aG4xWnNIeVgyeEZsRC16ZnA3dFhtY01YYS1NdHdWMGszdHpLNERzUzd2aFNBbjR3OVJlZ3p3ZzdTN2RqdWdINU8wUEcwZFhkcU5aZGNxWXhGQ3RhT1JDUWVVamQ1WDhlc3RFME1jUE5XRTdUVlBVR1BOLUotelpMWVIwLVZFZlI2QnQ0elpla3dlQzg4Nm5IeUNLaGZsMmVSVE4tWFRKUlRBVFhfZjMwNGhYNVJuTkxpVV9WbDAyU3FiN2NCM1JKRWFQYXdTbFF0VXB0TVVWOUduT3o1bWhISEUzZm9oU082R0RBTE5wNmxWNFQzS051QUN6UDNLd0VER3h5b3dCRWNVUnEtbElZZjFMSURKaE45M0tBalN5d2xhemc3ay11SUQweFBHQkdzclhiWEtjSWJkT2NyWDRJcy10TVJOaWVlTktFTFpEcXJ1SFQ0aVVHajdxYkZQd2FfSUROZmVwaGt0ampaRjI3b1hreG83bnlCemUyczM0Z25NQnhyZzM2SmJzMVpSdHRoUmw2RkZrOGJjWEtocTl1ODdmNmVaTVBCZUItNnhNOXgxcXFRY3RzNFVtcC1YelJKbV95Yjhka2Mzc3cyenRxT0wyTng3d2FFSi1qcGphc3FCeFpjY1lMbzNtTnlvWG8xdk5PNmxydXU1QUxrZmlLX0dFZTFkQjlSeVMxZmdZZXFEa05VQkNGbGJwUk1ndFgyalZFUVdfQ0o0MHdjM0d0bGJkY1lRLXFMQ2RCMm5KX3ZvMXNneHBhOUdFWkNwUWdvalh5Q3h0RWFkaGRkeXcwd094dXdWQTk0NDVMcUtTbnhQVGQtQjl5dVJSeS1TOE51ZGxwTmg0MlEzb2ViV2EtUGRoUl9UdlV3Mmlrc0dmRE1tY3JnWlhsU1hrdFd5WDVIRVVvRDFuZGNvNDh4Wk15QlBxakhxRjFxS0kwZk96NXFPSE9WcEFLZ0V1OFR4R0xpbE5IbWVwVFVRemVmNC1MS3ZVMDNZbmJOR2JEVEZBdkxvaXdMN2UxdGdiSVJ0SDdCaDVjQ1RWWjJEdnFlZ0dUTEpSZFFfRW9ZejhzbTdKZTBKaUU0Zk5Gc0pQc0pJS0JlS1RWc1l3eDRuVXExaFhvenhUN3BBbWJFM2ltaEZ1LXhCU1ZRZ2VMbWhBZ2pqc1oxZ0hmTVQ4Tmt4Znk0Y1JzOTU1Rlh0M21EQlRZd2g2azJteUxtM3p0bnFqTFNIeFk0U2NzaUR0Z0VtNHlUODB6VnA3LVVTdFRXNEZiWVlhaThYd3M1QXR6YUMzSVZlLTFibEVqeTJ0ZXp5ckRjbHQ5b0FrRzNET1dHTld1dUF5SHJvazlsNTB6WWpQWXlTdW1iYWtjX29mMVI5d1gxQklDQkpHcUtpSjZMOGpYNUxFX0ZHU3FudDdSVzFCOGZ5LUFfVUZQckFFd3hnY3lmeGZwSUlWcVRxcE9TcDNYbXpwM3VMaTVObGd3MVV0d3N6eVIwa04xeDljMDNSNjF6a250MFR1QjVncmN4Wm51cWw0amJlbllRZWFTZW9sUGtWTXVfVm9CbExOVFN2UTZiY1VGNG5ha09GSHRONm9RUWViSWk4bmtrVmNtRDBnN3FfOW5JdzdTeE9qaTNCZXFFVnJFR0c3SnpKSUpEcTZhcVhvTjZBRXotMzk1bXplU1dlWWJPc1dCRUF1ZkxQa28ySFlyd3ZzMU9abEVmNTBxMk9aNElRQ2NIOUZlUzBOZGRJeVRqdVhLaHdhM1FPNnQ1S2RVUGxWSk5leUNOeTJGemtjcnlpMjdBenpxQUpwU0liRmxtdkgtV3RPc0kzVlRtVEEzUlcxd2tlN0NqbHRmd3p2dWpfRUN1NUNIdEsxbzR0TVd3bHlZdHp5eVpTQWtlSXlYZlZoMWFRdk9tZ01vWlZ2NWxQcHdEZWJxb0M1djcyZ3QtWWdQalIxZHphUWluVXlDemQ0VW5ZQTVwLWxLNkl5a1dVT0J6eFZwRTkzUnJ1dTZYNHYzeXl3WkpLMEd1MGhtZGVyemJaVFJNVWdvMDZhdEhYYVIyQnAzVU1DWXBOcUtwZ0NnU2FCcVozTGFmWHd1Qlc0YUt6Y18wTUExaWh1SFVGVWp5S0YzTzhvb083WmE1VC1lYmZDSzNKbkZRZ2dlMER6S3pVTHc0NHFyU0Y2c0dZei1PQWMxdjZ4MHc1ZVBtSFdpX29aX0NjZUprTGhfQV9DRjdZMnFzb05ZdFpNNlR0UDFlUDJUMUpmeXpVYldIWC10b2VxbG1NNFlXS2s0ckVtaW9tenExQ3dsanVVS2dGRVhRLUxFZmZQXzlxYUVkbXgwalRFUmRJa01ieDlTeVdXY2pfQXI3Njg4ek1fRTllY0ZpYzVGUkQ3LWh0QVhwRGRlZVVBZlpJZnVsTnBLTjBISkJHZWxQR2hRV3JNNV9HZWV6eTFmSWNxdWhqQUYxdXdSQmRqYUFWZVhPYldfTlVvcUxsaTVtajVxR0F4Y0J2VkI0TF9iby1XUTczckZYcDVWUldqcjNDZXVVdWFaV0V4cFdKOEpZNkpaQVo1djFqMmNmNkFHZHBWcWJSSHZTRXJCTE85cVV0dVNhb0NCV3RJTk9iUUt0akVqclhhQzRQUmlEN0g3N2twV0pmX0tyZmM5cHB6cTVzVGYxUDNrMkZKVTVhUzJoYWl1T3F4bVo4VWtOcXJsTTNsOWtTX0VSTUMyUWQ1WGxnYllXX1RSaDBqMzB4VkJCcEplU01wYzFHT2ZpbzBPSmZJWVV3MDFwelh3MzhrR3UyZy1GbWM2SnNjdHJ5VGFLeXlUdlBOaS10UGVCbGt6Ni1jb3hxQTA2bnpDdURkX2FLS1dOR2FfVzJhVG9uZWZqcnFhUTVycGZzdm1ZRnJkUVJheVVQS00wR3RqYTBfbWt5QXduaTM2OW1wbEp6akFqUkx3T3FleXJad0ZRVWIxOHhSdzdEa2V5M2QwQUItU0lMWVpmSEJ5ZTd6RXNRQUJxeWlPbTYtZXBZc2Y0UjluVGtiYnBfM2ZwVWN6R1M2M2NzN2NWX3BDVHJCNW5FVXFNZWlPWmd1c3VySExYVUVnbHpwMkZpRktoR214Y1BHc2pOSkM0NUFzeDV5WlJlWXV0a09qWWpnSEdCSEVqSXFlVXNzYm5fZmkxaTljTEF4ajVlejJQUFJkRWQ5a1UtVVlhR1ZmWGFuWmV6WlJYcEVGdmlEUVViajhQcGczYWpXOEExMWtBWmNoYkxSRUtBTFNLR2w4UUstTlQ4SS10OGx5YkZtRFI1UnhOS1BZMnppdVFNRlJsckRzSDc2d3hrX3RQQWw3WWJNWkJQYUMtZ0NKdTJRZFhLSnZPbzcyRFU0aV9kbk4yZjVqVmJMRU0wNk5hbU5OdnluZm5oNHdlR01nc3o0VTNXWVN5Y3Vmc0kwaXFWQ0ZkcFJaWi0yMkd1VlVQeDFEZTY2NHphUXBaa3lTLW91dFBHeXpQcnpuUXJMQmJmLW9xLXdXaXZMSDVHWEN1dWJzRTYyYzhyV0NGZk9lSi16amNlemFld0FXblNjN09NR3JaM2JvTTZYOWN5MVJQNmxRY3ZKaUxialRMX1hfdW01d3pWSnF5eEhYSFFWZ05WUVhfMHZiN3hhZk9LX21fa2ZHS3RtT25zQnI1YS0zWkJTNVp6OTljY0ZoY21Sb2ZGb3FybVU5RjJvRTB0UnBNejdjSFVRWDdIT19fNlNaQ0E2c1I1eGV5aGRDa1NQZnJtaVRRTV9hN0hRU1pLRnZfNkotcmp3NlJhbTVwejc4UlZrRG1sSFpWM1c4WlpxNGdQWEZ5eVpmY19MV2RrX09nSVZfQUNLVGxTOG92VmpEOE9kaXBQdUhXbGFBa1N3UFpKSmxKZGp5TS1WNFJJU200c25DSHVfWWJnYTZtUHkxb21VQnhDWkowajBYU29VU0xFbnlzY3NWTDlmdDZBUGRSckRKYTVmQU5mVklwWXp3NkpDODY5NjlHZkhNb21qT0ZycU5BUFBHOHVmVlFvcG9rd1hsS1QyNGhydVMySFRwSndtZHV1UzdoYS1DeXpYLVctRmhuVmFvVEFUdzE5SjJtWnBEMGt5WWgtVmU3R0ZwWTlSeFpNaXVBVWxCOVZOVVk0TzZac2t5aHUwSzVPajlzdHVESTNvQ0pScDBMeHVfSDFMVnpaUUdYenFsbHlvUUZKd2pPYUpQbzJLYklZcHZqR0RDS0ZlTjRDUE1qcklLNFB1MFhDVTktLXdnZ3JIUXM3NUN6Z0FSczM5MnBVZkZnejhQM2ZHM2NhNVUxbjZDSFBBTzlpSjlLMnVROTB3a1AydlUxamJIMHgwb2h0TG4tTk8wd2VFeWY1NEQxdjBaVEZxNThRN1JQc3Q4MmR6UTNyUjZhU0xBT3FjN185Uy1SclZkWXZMUUROamJWMDNCaXUyVXJqY1k5ZmRaZllDM2R3OE1sYlZJcU92V2pTSUR0NFlMQzI5dG80YTVqRGdrcVEwZWlsRDRvTXlWY0xEd0dJRXh4QW55czN4NnJqM3U4MEdrREMxSkctNEw5THg0ay1rSGc5bHU5NzQ3bFVXS0Y5YktKcGJqZXo3VGpRNHAtX2V4bWNKZWpoWEpsZm5oWEhGN2xwaHJubFlNNnVBTUJKbG0xOWtEcGswTGhaXzVwZl8xbk9lQTh1dFZXcEFJRTlkNk9ZbXhGc0tNNHpuaGlHbEpnM1c2NTJFTF9Tb2NGaDI1cjBZOEllTGdkTWdTQ2pvTkNOb0ZUZDdqRXVrOE5Zdlp6RmdlQkk3YUt4Tnk4ZGRoRHBHVnV5MUkxUFNPcVA2MGY0NnBoTEVOM0ZBbnhaUzl3QnlyMzdYM0lRME8wc281NXFqaHJxczVkVFc3ZndZSmZ2WlBCdFIzOTBKdmdvSWVEVUt3WHlRck5CVTlaTy02ZTQ2UEExU3Z6T2ZpTVZ0ejJsMDFBeFlNUnJ5SjI5RDAyYlE0NmlxamdBNncwWXdXeU5sVlB4VkZ5NWIxRDhVdkVIdG9XVFY0V0RPa2t5cWNUdzJkbUU0b2lxcWl0cmV1WEItUDdvVFhHVWRodGNKcU1ZbG9GLUNac0ZWcnBrekFrcHpmd1lidy1SUmpvc1FScXNJelFpcmNDTVg0YXlBaW5DaDNYSmM5MDE2eVkyT0FxZUUwZ01oTmtFTk0yYjJ1RTRnWTZfcDhkRzBON2E3NVpCdXdyeksxUGc3a0tCQUtrcWVYWTNSNkdQX3hmU1hlQzZOMi1FWnJ6VENSVTlpRE81WUpZNTZkcEdYZk56SzVJSVpiTHllM2I1bC12RGJ2UldUODhXUlhhbHV4QkVqaG16RDlqYWZ4T1JKWmpqYTJ4a1Y3TGhjY3E0R01XTXhTLUpyZG03Qm5DMFNzc3R3M2lZRmJ4ZjhNZjJkWHRIMHEwNnVBTFk2WktYd1pBRXloQmxwYUJldG9KN09nUGJuRWxHcF9CelpUS0lKLW1zTk9iWk9VcjFwT1ZYRlZPc3FhbXpuWXVnTHZTaHRPcDItSUdjaU42dUU1VmN0dkNjVS1oUVZVQzdna052QW5IaEM5Z1FwVUhxeWc1NTExSEF2Vm41YmpDUkRNQzZJRlk2S0ZGSjQ2RE1YMzlLNUF6c2JfZndiOEw3WUFSU0hrM3I3VDJXYk9IYUdHNlh1OEVncmFaT3JLZEgwYXFYMnRhRmVWRzJ5Y0VGcHVkV0hIbWE0LXQzTEVWd1JLMkZJVnNmUDNhZjNMQXh2RFQ5am1VTjJTMlhrak44R1duaHFyTGR6TFlRcW9EaTBLdUNnWUNVS2lzb2FWU0RXY3dZWjhxMV9GVFRzeU5lcjlmQTlVNnNLVEtvU1RWZnI1OS1oeFdRZ0NJYW9GdW9KT0N1aGVlVWJsTjhNUkRUVV9UQl8zaENxYWhqX0pfS1RITGFsMmZXQ1l5UG9nYkFOYXhxZ1cxbGE3N1Q3akVTc1ZEbzJTbGx2NVhsSUUzYThvamNyVlFCUml1c1dmeEZCVWU0VFFGLU5ibURjN0pCZHBUM3J0NWRpV0dSaHA4WnBmb20wQXZvR3ZkX0lHV1VjYWVNa3I0MUxqUTZXd3prQzQ0c0lCUkdvRDFEWjdULWlpeFl3Tjl0OEIyQjFLRjRBVmFoaDh3WktrWjR2RXNsTEtieEFlWWlGSUtqOG0zQ3dfQm4tVE1UQXFCWXl6amxvbHBCaENMN090ZWFlSFBfemY4QlZlYWcxdGpuc0JGMUVLSGNTaEV6eVF3LUNxdWtETHJ3SG90UDlWRmxlVUwxWXk2bW8xWHhmWVd1akNlbjhsNGR3Y2VoT2Nic1dVczhIaXh4aDhqanZYaGVJSGxTR2lMUjhpcDNNTE9vcTRPb1V0RDFpS0JqUVhHQmhkcFhOQ0ZPS1IteFhsT3lRMks1SE54Q19lYV9NQ1hVWkFtV2o0UERjT1JnNHN3NzJJYktkWW9MLVdrdGVGbUhseEpMbmw2QTRDZURGV1U1aXVYcENWOWpMdFFaWG50X3RCWmtPUW56ZkhsT1F6dm5HR2V1TUxSTWFmbVNOUFhsMjBYa0lJclV5ZHZiWkpsVXh5OVNZaDA0dmxyOU9YYz0=)
          CM_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmUxT3gtRkhXWFhjTVh5X2ZDX01ZY1ZKRzhOYV9XcFlWWmIzMHVwNkJxdkZYbndhNTJtQ2VLS2dqNDJPenJhcGtJaDZjSjRRVWt1MmpEUElCWGxWOGp6ancxNEE9PQ==)
          CM_PROVISIONING_PROFILE: Encrypted()
        xcode: latest
        cocoapods: default
        flutter: stable
        branch_patterns:
          - pattern: 'master'
            include: true
            source: true
      scripts:
        - keychain initialize
        - |
          # set up provisioning profiles
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
          echo "Saved provisioning profile $PROFILE_PATH"
        - |
          # set up signing certificate
          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
        - xcode-project use-profiles
        - xcode-project build-ipa --project "helloworld.xcodeproj" --scheme "helloworld"
      artifacts:
        - build/ios/ipa/*.ipa
        - /tmp/xcodebuild_logs/*.log
    ios-hello-world-no-code-signing:
      name: Testing
      environment:
        xcode: latest
        cocoapods: default
        flutter: stable
      triggering:
        events:
          - push
        branch_patterns:
          - pattern: 'master'
            include: true
            source: true
      scripts:
        - name: Build iOS
          script: |
            cd $FCI_BUILD_DIR
            xcodebuild build -project "helloworld.xcodeproj" \
            -scheme "helloworld" \
            CODE_SIGN_INDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO
      artifacts:
        - build/**/*.app
        - /tmp/xcodebuild_logs/*.log
